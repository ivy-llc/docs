{
  "cells": [
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "FF-rwYGRCF9j"
      },
      "outputs": [],
      "source": [
        "import ivy\n",
        "import torch\n",
        "import tensorflow as tf\n",
        "import numpy as np"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "q2LNaAXxDWc-",
        "outputId": "ba1bf4f2-81c2-45ea-baa5-59c9cf5c2a43"
      },
      "outputs": [
        {
          "name": "stderr",
          "output_type": "stream",
          "text": [
            "/usr/local/lib/python3.10/dist-packages/ivy/utils/exceptions.py:383: UserWarning: The current backend: 'tensorflow' does not support inplace updates natively. Ivy would quietly create new arrays when using inplace updates with this backend, leading to memory overhead (same applies for views). If you want to control your memory management, consider doing ivy.set_inplace_mode('strict') which should raise an error whenever an inplace update is attempted with this backend.\n",
            "  warnings.warn(\n"
          ]
        }
      ],
      "source": [
        "TF_LSTM = ivy.transpile(torch.nn.LSTM, source=\"torch\", target=\"tensorflow\")\n",
        "\n",
        "torch_lstm = torch.nn.LSTM(2, 2, 1)\n",
        "tf_lstm = TF_LSTM(2, 2, 1)\n",
        "\n",
        "x = torch.rand((20, 32, 2))\n",
        "original_output = torch_lstm(x)\n",
        "x = tf.constant(x.cpu().numpy())\n",
        "transpiled_output = tf_lstm(x)\n",
        "\n",
        "assert np.allclose(original_output[0].detach().cpu().shape, transpiled_output[0].numpy().shape)"
      ]
    }
  ],
  "metadata": {
    "accelerator": "GPU",
    "colab": {
      "gpuType": "T4",
      "provenance": []
    },
    "kernelspec": {
      "display_name": "Python 3",
      "name": "python3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "nbformat": 4,
  "nbformat_minor": 0
}
